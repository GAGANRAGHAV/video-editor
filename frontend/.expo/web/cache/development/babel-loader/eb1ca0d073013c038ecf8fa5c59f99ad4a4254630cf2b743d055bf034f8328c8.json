{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Video } from 'expo-av';\nimport * as ImagePicker from 'expo-image-picker';\nimport Slider from '@react-native-community/slider';\nimport { uploadVideo } from \"../api\";\nimport uuid from 'react-native-uuid';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nvar VIDEO_HEIGHT = 250;\nexport default function EditorScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var videoUri = route.params.videoUri;\n  var videoRef = useRef(null);\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentTime = _useState4[0],\n    setCurrentTime = _useState4[1];\n  var _useState5 = useState({\n      width: SCREEN_WIDTH,\n      height: VIDEO_HEIGHT\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    videoSize = _useState6[0],\n    setVideoSize = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    overlays = _useState8[0],\n    setOverlays = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    isAddingOverlay = _useState0[0],\n    setIsAddingOverlay = _useState0[1];\n  var _useState1 = useState('text'),\n    _useState10 = _slicedToArray(_useState1, 2),\n    newOverlayType = _useState10[0],\n    setNewOverlayType = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    newOverlayContent = _useState12[0],\n    setNewOverlayContent = _useState12[1];\n  var _useState13 = useState({\n      start: 0,\n      end: 5\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    newOverlayTiming = _useState14[0],\n    setNewOverlayTiming = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isUploading = _useState16[0],\n    setIsUploading = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedOverlayId = _useState18[0],\n    setSelectedOverlayId = _useState18[1];\n  useEffect(function () {\n    if (status.isPlaying) {\n      var interval = setInterval(function () {\n        if (videoRef.current) {\n          videoRef.current.getStatusAsync().then(function (videoStatus) {\n            setCurrentTime(videoStatus.positionMillis / 1000);\n          });\n        }\n      }, 100);\n      return function () {\n        return clearInterval(interval);\n      };\n    }\n  }, [status.isPlaying]);\n  var addOverlay = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (newOverlayType === 'text' && !newOverlayContent) {\n        Alert.alert('Error', 'Please enter text content');\n        return;\n      }\n      var content = newOverlayContent;\n      if (newOverlayType !== 'text') {\n        try {\n          var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n          if (permissionResult.granted === false) {\n            Alert.alert('Error', 'Permission to access media library is required');\n            return;\n          }\n          var mediaType = newOverlayType === 'image' ? ImagePicker.MediaTypeOptions.Images : ImagePicker.MediaTypeOptions.Videos;\n          var result = yield ImagePicker.launchImageLibraryAsync({\n            mediaTypes: mediaType,\n            allowsEditing: true,\n            quality: 1\n          });\n          if (result.canceled) {\n            return;\n          }\n          content = result.assets[0].uri;\n        } catch (error) {\n          console.error('Error picking media:', error);\n          Alert.alert('Error', \"Error selecting media: \" + error.message);\n          return;\n        }\n      }\n      var newOverlay = {\n        id: uuid.v4(),\n        type: newOverlayType,\n        content: content,\n        position: {\n          x: Math.random() * (videoSize.width - 100),\n          y: Math.random() * (videoSize.height - 50)\n        },\n        size: {\n          width: newOverlayType === 'text' ? 150 : 100,\n          height: newOverlayType === 'text' ? 50 : 100\n        },\n        startTime: newOverlayTiming.start,\n        endTime: newOverlayTiming.end\n      };\n      setOverlays([].concat(_toConsumableArray(overlays), [newOverlay]));\n      setIsAddingOverlay(false);\n      setNewOverlayContent('');\n      setNewOverlayType('text');\n      setNewOverlayTiming({\n        start: 0,\n        end: 5\n      });\n    });\n    return function addOverlay() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateOverlayPosition = function updateOverlayPosition(id, newPosition) {\n    setOverlays(overlays.map(function (overlay) {\n      return overlay.id === id ? _objectSpread(_objectSpread({}, overlay), {}, {\n        position: newPosition\n      }) : overlay;\n    }));\n  };\n  var removeOverlay = function removeOverlay(id) {\n    setOverlays(overlays.filter(function (overlay) {\n      return overlay.id !== id;\n    }));\n    setSelectedOverlayId(null);\n  };\n  var selectOverlay = function selectOverlay(id) {\n    setSelectedOverlayId(id);\n  };\n  var updateOverlayTiming = function updateOverlayTiming(id, start, end) {\n    setOverlays(overlays.map(function (overlay) {\n      return overlay.id === id ? _objectSpread(_objectSpread({}, overlay), {}, {\n        startTime: start,\n        endTime: end\n      }) : overlay;\n    }));\n  };\n  var handleSubmit = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (overlays.length === 0) {\n        Alert.alert('Warning', 'No overlays added. Do you want to continue?', [{\n          text: 'Cancel',\n          style: 'cancel'\n        }, {\n          text: 'Continue',\n          onPress: submitVideo\n        }]);\n      } else {\n        submitVideo();\n      }\n    });\n    return function handleSubmit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var submitVideo = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setIsUploading(true);\n      try {\n        var formattedOverlays = overlays.map(function (overlay) {\n          var posX = overlay.position.x / videoSize.width;\n          var posY = overlay.position.y / videoSize.height;\n          var width = overlay.size.width / videoSize.width;\n          var height = overlay.size.height / videoSize.height;\n          return {\n            id: overlay.id,\n            type: overlay.type,\n            content: overlay.content,\n            position_x: posX,\n            position_y: posY,\n            start_time: overlay.startTime,\n            end_time: overlay.endTime,\n            width: width,\n            height: height,\n            font_size: overlay.type === 'text' ? 24 : undefined,\n            font_color: overlay.type === 'text' ? 'white' : undefined\n          };\n        });\n        var result = yield uploadVideo(videoUri, formattedOverlays);\n        navigation.navigate('Rendering', {\n          jobId: result.job_id\n        });\n      } catch (error) {\n        console.error('Error submitting video:', error);\n        Alert.alert('Error', \"Failed to upload video: \" + error.message);\n      } finally {\n        setIsUploading(false);\n      }\n    });\n    return function submitVideo() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.videoContainer,\n      children: [_jsx(Video, {\n        ref: videoRef,\n        source: {\n          uri: videoUri\n        },\n        style: styles.video,\n        resizeMode: \"contain\",\n        onPlaybackStatusUpdate: setStatus,\n        useNativeControls: true\n      }), overlays.map(function (overlay) {\n        return _jsx(View, {\n          style: [styles.overlay, {\n            left: overlay.position.x,\n            top: overlay.position.y,\n            width: overlay.size.width,\n            height: overlay.size.height,\n            borderColor: selectedOverlayId === overlay.id ? '#00ff00' : 'transparent',\n            borderWidth: selectedOverlayId === overlay.id ? 2 : 0,\n            display: currentTime >= overlay.startTime && currentTime <= overlay.endTime ? 'flex' : 'none'\n          }],\n          onTouchEnd: function onTouchEnd() {\n            return selectOverlay(overlay.id);\n          },\n          children: overlay.type === 'text' ? _jsx(Text, {\n            style: styles.overlayText,\n            children: overlay.content\n          }) : overlay.type === 'image' ? _jsx(Image, {\n            source: {\n              uri: overlay.content\n            },\n            style: styles.overlayMedia\n          }) : _jsx(Video, {\n            source: {\n              uri: overlay.content\n            },\n            style: styles.overlayMedia,\n            resizeMode: \"cover\",\n            shouldPlay: true,\n            isLooping: true,\n            isMuted: true\n          })\n        }, overlay.id);\n      })]\n    }), _jsxs(View, {\n      style: styles.timelineContainer,\n      children: [_jsxs(Text, {\n        children: [\"Timeline: \", currentTime.toFixed(1), \"s\"]\n      }), _jsx(Slider, {\n        style: styles.slider,\n        minimumValue: 0,\n        maximumValue: status.durationMillis ? status.durationMillis / 1000 : 100,\n        value: currentTime,\n        onValueChange: setCurrentTime,\n        minimumTrackTintColor: \"#4A90E2\",\n        maximumTrackTintColor: \"#d3d3d3\"\n      })]\n    }), _jsxs(ScrollView, {\n      style: styles.controlsContainer,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Overlays\"\n      }), overlays.length === 0 ? _jsx(Text, {\n        style: styles.emptyText,\n        children: \"No overlays added yet\"\n      }) : overlays.map(function (overlay) {\n        return _jsxs(View, {\n          style: styles.overlayItem,\n          children: [_jsx(Text, {\n            style: styles.overlayItemTitle,\n            children: overlay.type === 'text' ? \"Text: \\\"\" + overlay.content.substring(0, 20) + (overlay.content.length > 20 ? '...' : '') + \"\\\"\" : overlay.type === 'image' ? 'Image overlay' : 'Video overlay'\n          }), _jsxs(Text, {\n            children: [\"Time: \", overlay.startTime, \"s - \", overlay.endTime, \"s\"]\n          }), _jsxs(View, {\n            style: styles.overlayItemButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.smallButton, {\n                backgroundColor: '#4A90E2'\n              }],\n              onPress: function onPress() {\n                return selectOverlay(overlay.id);\n              },\n              children: _jsx(Text, {\n                style: styles.smallButtonText,\n                children: \"Edit\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.smallButton, {\n                backgroundColor: '#d9534f'\n              }],\n              onPress: function onPress() {\n                return removeOverlay(overlay.id);\n              },\n              children: _jsx(Text, {\n                style: styles.smallButtonText,\n                children: \"Remove\"\n              })\n            })]\n          })]\n        }, overlay.id);\n      }), selectedOverlayId && _jsxs(View, {\n        style: styles.selectedOverlayEditor,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Edit Timing\"\n        }), _jsx(Text, {\n          children: \"Start Time:\"\n        }), _jsx(Slider, {\n          style: styles.slider,\n          minimumValue: 0,\n          maximumValue: status.durationMillis ? status.durationMillis / 1000 : 100,\n          value: overlays.find(function (o) {\n            return o.id === selectedOverlayId;\n          }).startTime,\n          onValueChange: function onValueChange(value) {\n            var overlay = overlays.find(function (o) {\n              return o.id === selectedOverlayId;\n            });\n            updateOverlayTiming(selectedOverlayId, value, Math.max(overlay.endTime, value + 0.5));\n          }\n        }), _jsx(Text, {\n          children: \"End Time:\"\n        }), _jsx(Slider, {\n          style: styles.slider,\n          minimumValue: 0,\n          maximumValue: status.durationMillis ? status.durationMillis / 1000 : 100,\n          value: overlays.find(function (o) {\n            return o.id === selectedOverlayId;\n          }).endTime,\n          onValueChange: function onValueChange(value) {\n            var overlay = overlays.find(function (o) {\n              return o.id === selectedOverlayId;\n            });\n            updateOverlayTiming(selectedOverlayId, Math.min(overlay.startTime, value - 0.5), value);\n          }\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: function onPress() {\n          return setIsAddingOverlay(true);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Add Overlay\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: handleSubmit,\n        disabled: isUploading,\n        children: isUploading ? _jsx(ActivityIndicator, {\n          color: \"#fff\"\n        }) : _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Submit for Processing\"\n        })\n      })]\n    }), _jsx(Modal, {\n      visible: isAddingOverlay,\n      transparent: true,\n      animationType: \"slide\",\n      onRequestClose: function onRequestClose() {\n        return setIsAddingOverlay(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Add Overlay\"\n          }), _jsxs(View, {\n            style: styles.typeSelector,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.typeButton, newOverlayType === 'text' && styles.selectedTypeButton],\n              onPress: function onPress() {\n                return setNewOverlayType('text');\n              },\n              children: _jsx(Text, {\n                children: \"Text\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.typeButton, newOverlayType === 'image' && styles.selectedTypeButton],\n              onPress: function onPress() {\n                return setNewOverlayType('image');\n              },\n              children: _jsx(Text, {\n                children: \"Image\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.typeButton, newOverlayType === 'video' && styles.selectedTypeButton],\n              onPress: function onPress() {\n                return setNewOverlayType('video');\n              },\n              children: _jsx(Text, {\n                children: \"Video\"\n              })\n            })]\n          }), newOverlayType === 'text' && _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"Enter text\",\n            value: newOverlayContent,\n            onChangeText: setNewOverlayContent,\n            multiline: true\n          }), _jsx(Text, {\n            children: \"Start Time (seconds):\"\n          }), _jsx(Slider, {\n            style: styles.slider,\n            minimumValue: 0,\n            maximumValue: status.durationMillis ? status.durationMillis / 1000 : 100,\n            value: newOverlayTiming.start,\n            onValueChange: function onValueChange(value) {\n              return setNewOverlayTiming(_objectSpread(_objectSpread({}, newOverlayTiming), {}, {\n                start: value\n              }));\n            }\n          }), _jsxs(Text, {\n            children: [newOverlayTiming.start.toFixed(1), \"s\"]\n          }), _jsx(Text, {\n            children: \"End Time (seconds):\"\n          }), _jsx(Slider, {\n            style: styles.slider,\n            minimumValue: 0,\n            maximumValue: status.durationMillis ? status.durationMillis / 1000 : 100,\n            value: newOverlayTiming.end,\n            onValueChange: function onValueChange(value) {\n              return setNewOverlayTiming(_objectSpread(_objectSpread({}, newOverlayTiming), {}, {\n                end: value\n              }));\n            }\n          }), _jsxs(Text, {\n            children: [newOverlayTiming.end.toFixed(1), \"s\"]\n          }), _jsxs(View, {\n            style: styles.modalButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: '#d9534f'\n              }],\n              onPress: function onPress() {\n                return setIsAddingOverlay(false);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: '#5CB85C'\n              }],\n              onPress: addOverlay,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Add\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  videoContainer: {\n    width: '100%',\n    height: VIDEO_HEIGHT,\n    backgroundColor: '#000',\n    position: 'relative'\n  },\n  video: {\n    width: '100%',\n    height: '100%'\n  },\n  timelineContainer: {\n    padding: 10,\n    backgroundColor: '#f5f5f5'\n  },\n  slider: {\n    width: '100%',\n    height: 40\n  },\n  controlsContainer: {\n    flex: 1,\n    padding: 16\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  emptyText: {\n    fontStyle: 'italic',\n    color: '#999',\n    textAlign: 'center',\n    marginVertical: 20\n  },\n  overlayItem: {\n    backgroundColor: '#f5f5f5',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  overlayItemTitle: {\n    fontWeight: 'bold'\n  },\n  overlayItemButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: 8\n  },\n  smallButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 4,\n    marginLeft: 8\n  },\n  smallButtonText: {\n    color: '#fff',\n    fontSize: 12\n  },\n  addButton: {\n    backgroundColor: '#5CB85C',\n    padding: 12,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  submitButton: {\n    backgroundColor: '#4A90E2',\n    padding: 14,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  overlay: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  overlayText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  overlayMedia: {\n    width: '100%',\n    height: '100%'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 20,\n    width: '90%',\n    maxHeight: '80%'\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  typeSelector: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15\n  },\n  typeButton: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginHorizontal: 5,\n    borderRadius: 5\n  },\n  selectedTypeButton: {\n    backgroundColor: '#e6f2ff',\n    borderColor: '#4A90E2'\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 15,\n    height: 80,\n    textAlignVertical: 'top'\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    alignItems: 'center',\n    borderRadius: 5,\n    marginHorizontal: 5\n  },\n  selectedOverlayEditor: {\n    backgroundColor: '#f5f5f5',\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 10\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","StyleSheet","View","Text","TouchableOpacity","ScrollView","TextInput","Alert","Modal","ActivityIndicator","Dimensions","Video","ImagePicker","Slider","uploadVideo","uuid","jsx","_jsx","jsxs","_jsxs","SCREEN_WIDTH","get","width","VIDEO_HEIGHT","EditorScreen","_ref","route","navigation","videoUri","params","videoRef","_useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","currentTime","setCurrentTime","_useState5","height","_useState6","videoSize","setVideoSize","_useState7","_useState8","overlays","setOverlays","_useState9","_useState0","isAddingOverlay","setIsAddingOverlay","_useState1","_useState10","newOverlayType","setNewOverlayType","_useState11","_useState12","newOverlayContent","setNewOverlayContent","_useState13","start","end","_useState14","newOverlayTiming","setNewOverlayTiming","_useState15","_useState16","isUploading","setIsUploading","_useState17","_useState18","selectedOverlayId","setSelectedOverlayId","isPlaying","interval","setInterval","current","getStatusAsync","then","videoStatus","positionMillis","clearInterval","addOverlay","_ref2","_asyncToGenerator","alert","content","permissionResult","requestMediaLibraryPermissionsAsync","granted","mediaType","MediaTypeOptions","Images","Videos","result","launchImageLibraryAsync","mediaTypes","allowsEditing","quality","canceled","assets","uri","error","console","message","newOverlay","id","v4","type","position","x","Math","random","y","size","startTime","endTime","concat","_toConsumableArray","apply","arguments","updateOverlayPosition","newPosition","map","overlay","_objectSpread","removeOverlay","filter","selectOverlay","updateOverlayTiming","handleSubmit","_ref3","length","text","style","onPress","submitVideo","_ref4","formattedOverlays","posX","posY","position_x","position_y","start_time","end_time","font_size","undefined","font_color","navigate","jobId","job_id","styles","container","children","videoContainer","ref","source","video","resizeMode","onPlaybackStatusUpdate","useNativeControls","left","top","borderColor","borderWidth","display","onTouchEnd","overlayText","Image","overlayMedia","shouldPlay","isLooping","isMuted","timelineContainer","toFixed","slider","minimumValue","maximumValue","durationMillis","value","onValueChange","minimumTrackTintColor","maximumTrackTintColor","controlsContainer","sectionTitle","emptyText","overlayItem","overlayItemTitle","substring","overlayItemButtons","smallButton","backgroundColor","smallButtonText","selectedOverlayEditor","find","o","max","min","addButton","buttonText","submitButton","disabled","color","visible","transparent","animationType","onRequestClose","modalContainer","modalContent","modalTitle","typeSelector","typeButton","selectedTypeButton","textInput","placeholder","onChangeText","multiline","modalButtons","modalButton","create","flex","padding","fontSize","fontWeight","marginBottom","fontStyle","textAlign","marginVertical","borderRadius","flexDirection","justifyContent","marginTop","paddingHorizontal","paddingVertical","marginLeft","alignItems","maxHeight","marginHorizontal","textAlignVertical"],"sources":["D:/DEV/buttercutai_assignment/frontend/screens/EditorScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  TextInput,\r\n  Alert,\r\n  Modal,\r\n  ActivityIndicator,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { Video } from 'expo-av';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Slider from '@react-native-community/slider';\r\nimport { uploadVideo } from '../api';\r\nimport uuid from 'react-native-uuid';\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\nconst VIDEO_HEIGHT = 250;\r\n\r\nexport default function EditorScreen({ route, navigation }) {\r\n  const { videoUri } = route.params;\r\n  const videoRef = useRef(null);\r\n  const [status, setStatus] = useState({});\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [videoSize, setVideoSize] = useState({ width: SCREEN_WIDTH, height: VIDEO_HEIGHT });\r\n  const [overlays, setOverlays] = useState([]);\r\n  const [isAddingOverlay, setIsAddingOverlay] = useState(false);\r\n  const [newOverlayType, setNewOverlayType] = useState('text');\r\n  const [newOverlayContent, setNewOverlayContent] = useState('');\r\n  const [newOverlayTiming, setNewOverlayTiming] = useState({ start: 0, end: 5 });\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [selectedOverlayId, setSelectedOverlayId] = useState(null);\r\n\r\n  // Handle video playback position changes\r\n  useEffect(() => {\r\n    if (status.isPlaying) {\r\n      const interval = setInterval(() => {\r\n        if (videoRef.current) {\r\n          videoRef.current.getStatusAsync().then((videoStatus) => {\r\n            setCurrentTime(videoStatus.positionMillis / 1000);\r\n          });\r\n        }\r\n      }, 100);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [status.isPlaying]);\r\n\r\n  // Add a new overlay\r\n  const addOverlay = async () => {\r\n    if (newOverlayType === 'text' && !newOverlayContent) {\r\n      Alert.alert('Error', 'Please enter text content');\r\n      return;\r\n    }\r\n\r\n    let content = newOverlayContent;\r\n    \r\n    // For image/video overlays, pick from media library\r\n    if (newOverlayType !== 'text') {\r\n      try {\r\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        \r\n        if (permissionResult.granted === false) {\r\n          Alert.alert('Error', 'Permission to access media library is required');\r\n          return;\r\n        }\r\n        \r\n        const mediaType = newOverlayType === 'image'\r\n          ? ImagePicker.MediaTypeOptions.Images\r\n          : ImagePicker.MediaTypeOptions.Videos;\r\n        \r\n        const result = await ImagePicker.launchImageLibraryAsync({\r\n          mediaTypes: mediaType,\r\n          allowsEditing: true,\r\n          quality: 1,\r\n        });\r\n        \r\n        if (result.canceled) {\r\n          return;\r\n        }\r\n        \r\n        content = result.assets[0].uri;\r\n      } catch (error) {\r\n        console.error('Error picking media:', error);\r\n        Alert.alert('Error', `Error selecting media: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Create a new overlay\r\n    const newOverlay = {\r\n      id: uuid.v4(),\r\n      type: newOverlayType,\r\n      content: content,\r\n      position: {\r\n        x: Math.random() * (videoSize.width - 100),\r\n        y: Math.random() * (videoSize.height - 50),\r\n      },\r\n      size: {\r\n        width: newOverlayType === 'text' ? 150 : 100,\r\n        height: newOverlayType === 'text' ? 50 : 100,\r\n      },\r\n      startTime: newOverlayTiming.start,\r\n      endTime: newOverlayTiming.end,\r\n    };\r\n    \r\n    setOverlays([...overlays, newOverlay]);\r\n    setIsAddingOverlay(false);\r\n    setNewOverlayContent('');\r\n    setNewOverlayType('text');\r\n    setNewOverlayTiming({ start: 0, end: 5 });\r\n  };\r\n\r\n  // Update overlay position when dragged\r\n  const updateOverlayPosition = (id, newPosition) => {\r\n    setOverlays(\r\n      overlays.map((overlay) =>\r\n        overlay.id === id\r\n          ? { ...overlay, position: newPosition }\r\n          : overlay\r\n      )\r\n    );\r\n  };\r\n\r\n  // Remove an overlay\r\n  const removeOverlay = (id) => {\r\n    setOverlays(overlays.filter((overlay) => overlay.id !== id));\r\n    setSelectedOverlayId(null);\r\n  };\r\n\r\n  // Select overlay for editing\r\n  const selectOverlay = (id) => {\r\n    setSelectedOverlayId(id);\r\n  };\r\n\r\n  // Update overlay timing\r\n  const updateOverlayTiming = (id, start, end) => {\r\n    setOverlays(\r\n      overlays.map((overlay) =>\r\n        overlay.id === id\r\n          ? { ...overlay, startTime: start, endTime: end }\r\n          : overlay\r\n      )\r\n    );\r\n  };\r\n\r\n  // Submit video for processing\r\n  const handleSubmit = async () => {\r\n    if (overlays.length === 0) {\r\n      Alert.alert('Warning', 'No overlays added. Do you want to continue?', [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel',\r\n        },\r\n        { text: 'Continue', onPress: submitVideo },\r\n      ]);\r\n    } else {\r\n      submitVideo();\r\n    }\r\n  };\r\n\r\n  // Upload video and overlays to backend\r\n  const submitVideo = async () => {\r\n    setIsUploading(true);\r\n    try {\r\n      // Format overlays for API\r\n      const formattedOverlays = overlays.map((overlay) => {\r\n        // Convert from pixels to percentage (0-1)\r\n        const posX = overlay.position.x / videoSize.width;\r\n        const posY = overlay.position.y / videoSize.height;\r\n        const width = overlay.size.width / videoSize.width;\r\n        const height = overlay.size.height / videoSize.height;\r\n\r\n        return {\r\n          id: overlay.id,\r\n          type: overlay.type,\r\n          content: overlay.content,\r\n          position_x: posX,\r\n          position_y: posY,\r\n          start_time: overlay.startTime,\r\n          end_time: overlay.endTime,\r\n          width: width,\r\n          height: height,\r\n          font_size: overlay.type === 'text' ? 24 : undefined,\r\n          font_color: overlay.type === 'text' ? 'white' : undefined,\r\n        };\r\n      });\r\n\r\n      // Upload to server\r\n      const result = await uploadVideo(videoUri, formattedOverlays);\r\n      \r\n      // Navigate to rendering screen with job ID\r\n      navigation.navigate('Rendering', { jobId: result.job_id });\r\n    } catch (error) {\r\n      console.error('Error submitting video:', error);\r\n      Alert.alert('Error', `Failed to upload video: ${error.message}`);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Video Preview */}\r\n      <View style={styles.videoContainer}>\r\n        <Video\r\n          ref={videoRef}\r\n          source={{ uri: videoUri }}\r\n          style={styles.video}\r\n          resizeMode=\"contain\"\r\n          onPlaybackStatusUpdate={setStatus}\r\n          useNativeControls\r\n        />\r\n        \r\n        {/* Overlays on top of video */}\r\n        {overlays.map((overlay) => (\r\n          <View\r\n            key={overlay.id}\r\n            style={[\r\n              styles.overlay,\r\n              {\r\n                left: overlay.position.x,\r\n                top: overlay.position.y,\r\n                width: overlay.size.width,\r\n                height: overlay.size.height,\r\n                borderColor: selectedOverlayId === overlay.id ? '#00ff00' : 'transparent',\r\n                borderWidth: selectedOverlayId === overlay.id ? 2 : 0,\r\n                display: (currentTime >= overlay.startTime && currentTime <= overlay.endTime) \r\n                  ? 'flex' : 'none',\r\n              },\r\n            ]}\r\n            onTouchEnd={() => selectOverlay(overlay.id)}\r\n          >\r\n            {overlay.type === 'text' ? (\r\n              <Text style={styles.overlayText}>{overlay.content}</Text>\r\n            ) : overlay.type === 'image' ? (\r\n              <Image source={{ uri: overlay.content }} style={styles.overlayMedia} />\r\n            ) : (\r\n              <Video\r\n                source={{ uri: overlay.content }}\r\n                style={styles.overlayMedia}\r\n                resizeMode=\"cover\"\r\n                shouldPlay\r\n                isLooping\r\n                isMuted\r\n              />\r\n            )}\r\n          </View>\r\n        ))}\r\n      </View>\r\n\r\n      {/* Timeline slider */}\r\n      <View style={styles.timelineContainer}>\r\n        <Text>Timeline: {currentTime.toFixed(1)}s</Text>\r\n        <Slider\r\n          style={styles.slider}\r\n          minimumValue={0}\r\n          maximumValue={status.durationMillis ? status.durationMillis / 1000 : 100}\r\n          value={currentTime}\r\n          onValueChange={setCurrentTime}\r\n          minimumTrackTintColor=\"#4A90E2\"\r\n          maximumTrackTintColor=\"#d3d3d3\"\r\n        />\r\n      </View>\r\n\r\n      {/* Overlay controls */}\r\n      <ScrollView style={styles.controlsContainer}>\r\n        <Text style={styles.sectionTitle}>Overlays</Text>\r\n        \r\n        {/* List of added overlays */}\r\n        {overlays.length === 0 ? (\r\n          <Text style={styles.emptyText}>No overlays added yet</Text>\r\n        ) : (\r\n          overlays.map((overlay) => (\r\n            <View key={overlay.id} style={styles.overlayItem}>\r\n              <Text style={styles.overlayItemTitle}>\r\n                {overlay.type === 'text'\r\n                  ? `Text: \"${overlay.content.substring(0, 20)}${overlay.content.length > 20 ? '...' : ''}\"`\r\n                  : overlay.type === 'image'\r\n                  ? 'Image overlay'\r\n                  : 'Video overlay'}\r\n              </Text>\r\n              <Text>\r\n                Time: {overlay.startTime}s - {overlay.endTime}s\r\n              </Text>\r\n              <View style={styles.overlayItemButtons}>\r\n                <TouchableOpacity\r\n                  style={[styles.smallButton, { backgroundColor: '#4A90E2' }]}\r\n                  onPress={() => selectOverlay(overlay.id)}\r\n                >\r\n                  <Text style={styles.smallButtonText}>Edit</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={[styles.smallButton, { backgroundColor: '#d9534f' }]}\r\n                  onPress={() => removeOverlay(overlay.id)}\r\n                >\r\n                  <Text style={styles.smallButtonText}>Remove</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          ))\r\n        )}\r\n\r\n        {/* Selected overlay timing editor */}\r\n        {selectedOverlayId && (\r\n          <View style={styles.selectedOverlayEditor}>\r\n            <Text style={styles.sectionTitle}>Edit Timing</Text>\r\n            <Text>Start Time:</Text>\r\n            <Slider\r\n              style={styles.slider}\r\n              minimumValue={0}\r\n              maximumValue={status.durationMillis ? status.durationMillis / 1000 : 100}\r\n              value={overlays.find(o => o.id === selectedOverlayId).startTime}\r\n              onValueChange={(value) => {\r\n                const overlay = overlays.find(o => o.id === selectedOverlayId);\r\n                updateOverlayTiming(\r\n                  selectedOverlayId,\r\n                  value,\r\n                  Math.max(overlay.endTime, value + 0.5)\r\n                );\r\n              }}\r\n            />\r\n            <Text>End Time:</Text>\r\n            <Slider\r\n              style={styles.slider}\r\n              minimumValue={0}\r\n              maximumValue={status.durationMillis ? status.durationMillis / 1000 : 100}\r\n              value={overlays.find(o => o.id === selectedOverlayId).endTime}\r\n              onValueChange={(value) => {\r\n                const overlay = overlays.find(o => o.id === selectedOverlayId);\r\n                updateOverlayTiming(\r\n                  selectedOverlayId,\r\n                  Math.min(overlay.startTime, value - 0.5),\r\n                  value\r\n                );\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        {/* Add overlay button */}\r\n        <TouchableOpacity\r\n          style={styles.addButton}\r\n          onPress={() => setIsAddingOverlay(true)}\r\n        >\r\n          <Text style={styles.buttonText}>Add Overlay</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Submit button */}\r\n        <TouchableOpacity\r\n          style={styles.submitButton}\r\n          onPress={handleSubmit}\r\n          disabled={isUploading}\r\n        >\r\n          {isUploading ? (\r\n            <ActivityIndicator color=\"#fff\" />\r\n          ) : (\r\n            <Text style={styles.buttonText}>Submit for Processing</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n\r\n      {/* Add Overlay Modal */}\r\n      <Modal\r\n        visible={isAddingOverlay}\r\n        transparent\r\n        animationType=\"slide\"\r\n        onRequestClose={() => setIsAddingOverlay(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Add Overlay</Text>\r\n            \r\n            {/* Overlay type selection */}\r\n            <View style={styles.typeSelector}>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.typeButton,\r\n                  newOverlayType === 'text' && styles.selectedTypeButton,\r\n                ]}\r\n                onPress={() => setNewOverlayType('text')}\r\n              >\r\n                <Text>Text</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.typeButton,\r\n                  newOverlayType === 'image' && styles.selectedTypeButton,\r\n                ]}\r\n                onPress={() => setNewOverlayType('image')}\r\n              >\r\n                <Text>Image</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.typeButton,\r\n                  newOverlayType === 'video' && styles.selectedTypeButton,\r\n                ]}\r\n                onPress={() => setNewOverlayType('video')}\r\n              >\r\n                <Text>Video</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            {/* Text content input (for text overlays) */}\r\n            {newOverlayType === 'text' && (\r\n              <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Enter text\"\r\n                value={newOverlayContent}\r\n                onChangeText={setNewOverlayContent}\r\n                multiline\r\n              />\r\n            )}\r\n\r\n            {/* Timing controls */}\r\n            <Text>Start Time (seconds):</Text>\r\n            <Slider\r\n              style={styles.slider}\r\n              minimumValue={0}\r\n              maximumValue={status.durationMillis ? status.durationMillis / 1000 : 100}\r\n              value={newOverlayTiming.start}\r\n              onValueChange={(value) =>\r\n                setNewOverlayTiming({ ...newOverlayTiming, start: value })\r\n              }\r\n            />\r\n            <Text>{newOverlayTiming.start.toFixed(1)}s</Text>\r\n\r\n            <Text>End Time (seconds):</Text>\r\n            <Slider\r\n              style={styles.slider}\r\n              minimumValue={0}\r\n              maximumValue={status.durationMillis ? status.durationMillis / 1000 : 100}\r\n              value={newOverlayTiming.end}\r\n              onValueChange={(value) =>\r\n                setNewOverlayTiming({ ...newOverlayTiming, end: value })\r\n              }\r\n            />\r\n            <Text>{newOverlayTiming.end.toFixed(1)}s</Text>\r\n\r\n            {/* Action buttons */}\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, { backgroundColor: '#d9534f' }]}\r\n                onPress={() => setIsAddingOverlay(false)}\r\n              >\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, { backgroundColor: '#5CB85C' }]}\r\n                onPress={addOverlay}\r\n              >\r\n                <Text style={styles.buttonText}>Add</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  videoContainer: {\r\n    width: '100%',\r\n    height: VIDEO_HEIGHT,\r\n    backgroundColor: '#000',\r\n    position: 'relative',\r\n  },\r\n  video: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  timelineContainer: {\r\n    padding: 10,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  slider: {\r\n    width: '100%',\r\n    height: 40,\r\n  },\r\n  controlsContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  emptyText: {\r\n    fontStyle: 'italic',\r\n    color: '#999',\r\n    textAlign: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  overlayItem: {\r\n    backgroundColor: '#f5f5f5',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  overlayItemTitle: {\r\n    fontWeight: 'bold',\r\n  },\r\n  overlayItemButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    marginTop: 8,\r\n  },\r\n  smallButton: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n    marginLeft: 8,\r\n  },\r\n  smallButtonText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n  },\r\n  addButton: {\r\n    backgroundColor: '#5CB85C',\r\n    padding: 12,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginVertical: 10,\r\n  },\r\n  submitButton: {\r\n    backgroundColor: '#4A90E2',\r\n    padding: 14,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  overlayText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  overlayMedia: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    width: '90%',\r\n    maxHeight: '80%',\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  typeSelector: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 15,\r\n  },\r\n  typeButton: {\r\n    flex: 1,\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    marginHorizontal: 5,\r\n    borderRadius: 5,\r\n  },\r\n  selectedTypeButton: {\r\n    backgroundColor: '#e6f2ff',\r\n    borderColor: '#4A90E2',\r\n  },\r\n  textInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 15,\r\n    height: 80,\r\n    textAlignVertical: 'top',\r\n  },\r\n  modalButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 20,\r\n  },\r\n  modalButton: {\r\n    flex: 1,\r\n    padding: 12,\r\n    alignItems: 'center',\r\n    borderRadius: 5,\r\n    marginHorizontal: 5,\r\n  },\r\n  selectedOverlayEditor: {\r\n    backgroundColor: '#f5f5f5',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginVertical: 10,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}